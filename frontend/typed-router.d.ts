/* eslint-disable */
/* prettier-ignore */
// @ts-nocheck
// Generated by unplugin-vue-router. ‼️ DO NOT MODIFY THIS FILE ‼️
// It's recommended to commit this file.
// Make sure to add this file to your tsconfig.json file as an "includes" or "files" entry.

declare module 'vue-router/auto-routes' {
  import type {
    RouteRecordInfo,
    ParamValue,
    ParamValueOneOrMore,
    ParamValueZeroOrMore,
    ParamValueZeroOrOne,
  } from 'vue-router'

  /**
   * Route name map generated by unplugin-vue-router
   */
  export interface RouteNamedMap {
    '/': RouteRecordInfo<'/', '/', Record<never, never>, Record<never, never>>,
    '/[...404]': RouteRecordInfo<'/[...404]', '/:404(.*)', { 404: ParamValue<true> }, { 404: ParamValue<false> }>,
    '/note': RouteRecordInfo<'/note', '/note', Record<never, never>, Record<never, never>, '/note/search'>,
    '/note/search': RouteRecordInfo<'/note/search', '/note/search', Record<never, never>, Record<never, never>>,
    '/todo': RouteRecordInfo<'/todo', '/todo', Record<never, never>, Record<never, never>, '/todo/search'>,
    '/todo/search': RouteRecordInfo<'/todo/search', '/todo/search', Record<never, never>, Record<never, never>>,
    '/user': RouteRecordInfo<'/user', '/user', Record<never, never>, Record<never, never>, '/user/setting' | '/user/setting/about'>,
    '/user/setting': RouteRecordInfo<'/user/setting', '/user/setting', Record<never, never>, Record<never, never>, '/user/setting/about'>,
    '/user/setting/about': RouteRecordInfo<'/user/setting/about', '/user/setting/about', Record<never, never>, Record<never, never>>,
  }

  /**
   * Route file to route info map by unplugin-vue-router.
   * Used by the volar plugin to automatically type useRoute()
   *
   * Each key is a file path relative to the project root with 2 properties:
   * - routes: union of route names of the possible routes when in this page (passed to useRoute<...>())
   * - views: names of nested views (can be passed to <RouterView name="...">)
   *
   * @internal
   */
  export interface _RouteFileInfoMap {
    'src/pages/index.vue': {
      routes: '/'
      views: never
    }
    'src/pages/[...404].vue': {
      routes: '/[...404]'
      views: never
    }
    'src/pages/note.vue': {
      routes: '/note' | '/note/search'
      views: 'default'
    }
    'src/pages/note/search.vue': {
      routes: '/note/search'
      views: never
    }
    'src/pages/todo.vue': {
      routes: '/todo' | '/todo/search'
      views: 'default'
    }
    'src/pages/todo/search.vue': {
      routes: '/todo/search'
      views: never
    }
    'src/pages/user.vue': {
      routes: '/user' | '/user/setting/about' | '/user/setting'
      views: 'default'
    }
    'src/pages/user/setting.vue': {
      routes: '/user/setting' | '/user/setting/about'
      views: 'default'
    }
    'src/pages/user/setting/about.vue': {
      routes: '/user/setting/about'
      views: never
    }
  }

  /**
   * Get a union of possible route names in a certain route component file.
   * Used by the volar plugin to automatically type useRoute()
   *
   * @internal
   */
  export type _RouteNamesForFilePath<FilePath extends string> =
    _RouteFileInfoMap extends Record<FilePath, infer Info>
      ? Info['routes']
      : keyof RouteNamedMap
}
